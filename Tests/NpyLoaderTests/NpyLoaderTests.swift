import XCTest
@testable import NpyLoader

class NpyLoaderTests: XCTestCase {
    
    func testLoadSuccess() {
        do {
            let (shape, elements): ([Int], [Float]) = try! load(npyData: f4_shape_10_elements_0_9)
            XCTAssertEqual(shape, [10])
            XCTAssertEqual(elements, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
        }
        do {
            let (shape, elements): ([Int], [Double]) = try! load(npyData: f8_shape_2_3_elements_0_5)
            XCTAssertEqual(shape, [2, 3])
            XCTAssertEqual(elements, [0, 1, 2, 3, 4, 5])
        }
    }
    
    func testLoadFailure() {
        do {
            let loader = {
                let (_, _): ([Int], [Double]) = try load(npyData: f4_shape_10_elements_0_9)
            }
            XCTAssertThrowsError(try loader())
        }
        do {
            let loader = {
                let (_, _): ([Int], [Float]) = try load(npyData: f8_shape_2_3_elements_0_5)
            }
            XCTAssertThrowsError(try loader())
        }
    }


    static var allTests = [
        ("testLoadSucess", testLoadSuccess),
        ("testLoadFailure", testLoadFailure),
    ]
}

let f4_shape_10_elements_0_9 = Data(bytes: [
    0x93, 0x4e, 0x55, 0x4d, 0x50, 0x59, 0x01, 0x00, 0x46, 0x00, 0x7b, 0x27, 0x64, 0x65, 0x73, 0x63,
    0x72, 0x27, 0x3a, 0x20, 0x27, 0x3c, 0x66, 0x34, 0x27, 0x2c, 0x20, 0x27, 0x66, 0x6f, 0x72, 0x74,
    0x72, 0x61, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x27, 0x3a, 0x20, 0x46, 0x61, 0x6c, 0x73,
    0x65, 0x2c, 0x20, 0x27, 0x73, 0x68, 0x61, 0x70, 0x65, 0x27, 0x3a, 0x20, 0x28, 0x31, 0x30, 0x2c,
    0x29, 0x2c, 0x20, 0x7d, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x80, 0x40, 0x00, 0x00, 0xa0, 0x40, 0x00, 0x00, 0xc0, 0x40, 0x00, 0x00, 0xe0, 0x40,
    0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x10, 0x41
])

let f8_shape_2_3_elements_0_5 = Data(bytes: [
    0x93, 0x4e, 0x55, 0x4d, 0x50, 0x59, 0x01, 0x00, 0x46, 0x00, 0x7b, 0x27, 0x64, 0x65, 0x73, 0x63,
    0x72, 0x27, 0x3a, 0x20, 0x27, 0x3c, 0x66, 0x38, 0x27, 0x2c, 0x20, 0x27, 0x66, 0x6f, 0x72, 0x74,
    0x72, 0x61, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x27, 0x3a, 0x20, 0x46, 0x61, 0x6c, 0x73,
    0x65, 0x2c, 0x20, 0x27, 0x73, 0x68, 0x61, 0x70, 0x65, 0x27, 0x3a, 0x20, 0x28, 0x32, 0x2c, 0x20,
    0x33, 0x29, 0x2c, 0x20, 0x7d, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x40
])
